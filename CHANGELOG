Zero Thor Changelog
-------------------

0.2.5
-----
- fixed a bug dardevelin pointed out: incorrect behavior of wpm assembler with
  empty input

0.2.4
-----
- fixed a bug where the wpm assembler was queueing most tokens twice, but only
  processing them once
- starting on SDL support for wpm to do graphics

0.2.3
-----
- more bug fixes in the wpm assembler; for one, negative constant values should
  work now :)

0.2.2
-----
- fixed the wpm assembler so whitespaces (within strings a'la .asciz) work
- fixed bugs in wpm multithreading
- made the wpm assembler recognize indirect addressing with constructions like
	mov	%r0, (%r1)
- fixed addressing bugs in opmov(), opmovb(), and opmovw() in
  usr/tools/wpm/wpm.c

0.2.1
-----
- made the thr instruction launch new threads with wpm
- working on the pseudo machine book; see usr/tools/wpm/wpmprog.* :)

0.2.0
-----
- had mistakenly renamed releases starting from 0.0.15 as 0.1.x, so I'm in the
  need to update the version number
- added a few new instructions in wpm; cli, sti, iret

0.0.20
------
- added #import <std.asm> and #include <std.asm> directives for wpm assembler
- the wpm assembler now supports .globl, .space, .org and .align
- fixing bugs in wpm

0.0.19
------
- more bug fixes in wpm :)

0.0.18
------
- yet more work on wpm
  - fixed some bugs; e.g., function calls (call) and returns (ret) work now
  - made it possible to use comments with /* and */, ;, and //
  - added simple #include <file.asm> directive

0.0.17
------
- hacking on wpm; added native X86 [inline] assembly for some operations in
  usr/tools/wpm/ia32/asm.h

0.0.16
------

- working on usr/tools/wpm; bytecode interpreter (wpm.c) under construction
- more work on wpm; hacking on a simple assembler :) (asm.c)
- wpm now translates and executes a few simple example programs - rock! :)

0.0.15
------
- improved function names a bit here and there (e.g. kern/ia32/vm.c)
- split wpm from notes/ideas/ into a separate project in usr/tools/wpm
- moved Earthquake from usr/lib/ into usr/tools/

0.0.14
------
- 0.0.13 added doc/src/zerovol1.tex, LaTex source for a new book I'm writing
  on the kernel project
- fixed the pseudo-scheduler to run on timer interrupt; however, need to use
  local APIC timers on SMP systems later
- fixed lots of bugs in the multiprocessor boot code; not working at the time
  of this writing, but hopefully soon
- fixed some bugs in the kernel; got rid of the unnecessary separate stack
  segment (using flat memory model, mostly)

0.0.13
------
- reorganising things
- attempting to get multiprocessor code to run

0.0.12
------
- imported more code from the earlier git version
  - APIC support
  - IOAPIC support
  - multiprocessor initialisation and startup (FIXME)

0.0.11
------
- imported usr/lib/c/assert.h from an older version of zero
- added more GCC functionality to usr/lib/zero/cdecl.h
  - NORET
  - likely(), unlikely()

0.0.10
------
- split and extended some files under notes/; moved game text files to
  notes/games/
- other small changes here and there

0.0.9
-----
- imported older compiler/language project into usr/lib/Earthquake

0.0.8
-----
- added READAHEAD and FHINT system calls in kern/syscall.h
- imported fdlibm 5.3 into usr/lib/fdlibm53 and patched it to build a shared
  library along with the static one
- adding support for <ctype.h> and <locale.h> + strcoll in <string.h>

0.0.7
-----
- started work on support for 8-bit character types, mostly usr/lib/c/ctype.h
  - wide characters to follow in <wchar.h> and <zero/utf8.h>
- renamed usr/lib/m/trig.c usr/lib/m/i387/math.c to encapsulate machine
  dependencies into subdirectories
- added ROADMAP directory to help navigate the source tree
- imported usr/lib/zero/x86-64/param.h
- added comments to usr/lib/zero header files
- imported usr/lib/zero/prof.h and usr/lib/zero/ia32/prof.h

0.0.6
-----
- working on libc; usr/lib/c/sys/stat.h, moved kern/errno.h to usr/lib/c/errno.h
  and added entries
- added usr/lib/c/features.h; using feature test macros here and there
- added ISO C11 function aligned_alloc() in usr/lib/malloc.c; added argument
  checks for some allocation functions as well
- added usr/lib/m/math.h and usr/lib/m/complex.h as a start for the math library
- implemented basic trigonometry and other features for usr/lib/m

0.0.5
-----
- new code; kern/thr.h, test/aud.h, test/vid.h, test/deck.h, test/iso9660.h
- importing more stuff from github version; mostly libc

0.0.4
-----
- a bit of tuning of usr/lib/c/malloc.c
- fixed kernel bufalloc() for void argument and bzero()'ing the buffers on
  allocation

0.0.3
-----
- moved usr/lib/zero/bitmap.c to kern/bitmap.c

0.0.2
-----
- added usr/lib/zero/bitmap.c for bitmap operations; some are in <zero/trix.h>

0.0.1
-----
- initial release
