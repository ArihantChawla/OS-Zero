units and operations
--------------------

shifter
-------
shl	shr	sar	rol	ror

adder
-----
add	sub

multiplier
----------
mul

divisor
-------
div	mod

bits
----
not	and	or	xor

mem
---
lea	lda	sta

branches
--------
jmp	bra	call	ret	iret

stack
-----
lsp	- set stack-pointer; privileged instruction
psh	pop

machine
-------
lmsw	- set machine-status word; privileged instruction
smsw	- store machine-status word

io
--
in
out

button layout
-------------

assembly mnemonics			symbols
------------------			-------
not	and	or	xor		~	&	|	^	MODE
shl	shr	sar	rol	ror	<<	>>	>>>	<..	..>
inc	dec	add	sub	cmp	++	--	+	-	<>
mul	div	mod			*	/	%	CLR	SAVE
					PUSH	POP	()	SHIFT	ON/OFF
					BASE	BITS	UNIT	EDIT	CLEAR
					PROG	SCR	EXIT	EVAL	ENTER

registers
---------
r0..r15		integer		32/64
st0..st15	stack		64/128
vl0..vl15	vector-lengths	32/64
f0..f15		floating-point	64/128
pc		program-counter	32/64
msw		machine-status	32/64
fp		frame-pointer	32/64
sp		stack-pointer	32/64

msw
---

flags
-----
zf	- zero flag
cf	- carry-flag
of	- overflow-flag
if	- interrupt-flag
uf	- user-mode execution; only accessible in system mode, i.e. when zero

opcodes
-------

op
--
op	- up to 8-bit instruction ID (5-bit in default configuration)

flags
-----
lf	- lock-prefix bit [atomic operations]
ff	- floating-point instruction
vf	- vector-operation [use vl-register]

regs
----
src	- up to 8-bit source register ID (4-bit in default configuration)
dest	- up to 8-bit destination register ID (4-bit in default configuration)

