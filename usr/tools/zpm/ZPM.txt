Zero Pseudo Machine
-------------------

Zero Pseudo Machine, later called ZPM for short, aims to be a simple virtual
machine designed and implemented with education in mind; teaching and learning
programming is a vital thing today.

I wanted to create a RISC-like architecture with an instruction set closely
resembling the C programming language; the "machine" will first be programmable
in its own assembly dialect (AT&T syntax), but I hope to extend it with
languages such as Basic, Forth, and possibly a subset/version of C.

ALU Instructions
----------------

op	arg1	arg2	brief
--	----	----	-----
NOP	N/A	N/A	no operation (skip)
NOT	r	N/A	2's complement (reverse all bits)
AND	r/i	r	bitwise logical AND
OR	r/i	r	bitwise logical OR
XOR	r/i	r	bitwise logical XOR
SHL	r/i8	r	shift left
SHR	r/i8	r	shift right logical (fill with zero)
SAR	r/i8	r	shift right arithmetical (fill with sign-bit)
ROL	r/i8	r	rotate bits left
ROR	r/i8	r	rotate bits right
INC	r	N/A	increment accumulator by one
DEC	r	N/A	decrement accumulator by one
ADD	r/i	r	add arg1 to accumulator arg2
SUB	r/i	r	subtract arg1 from accumulator arg2
MUL	r/i	r	multiply accumulator arg2 by arg1
DIV	r/i	r	divide accumulator arg2 by arg1; return modulus in REGF
JMP
BZ
BNZ
BLT
BLE
BGT
BGE
BO
BNO
BC
BNC
POP
PUSH
PUSHA
LDA
STA
CALL
ENTER
LEAVE
RET
THR
LTB

FPU Instructions
----------------

System Instructions
-------------------

LDR
STR
RST
HLT

I/O Interface
-------------

