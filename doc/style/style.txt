Welcome to read an early version of a style guide for the Zero project! :)

/* zero style abbreviations for words/terms and terminology */

indentation etc.
---------------
- see style.c for example code :)

general conventions
-------------------
- assembly files are to be written in AT&T syntax... ;)

objects/identifiers
-------------------
- volatile-qualifier should be used for cross-thread variables such as mutexes
- static-qualifier is good for locally visible values
  - may let the compiler do more aggressive optimisations
- global entities can be wrapped into a single per-program structure
  - e.g. struct g_malloc; use g_-prefix (global)
- constant [macro] values in all upper case, e.g. TRAPPF
- function names should contain verbs
  - module name + verb + possible object
    - e.g. meminit(), vminitzone()
- object sizes are usually represented as number of bytes
- n-prefix for number of items
  - e.g. nfile - number of files, nbyte - number of bytes
- data structure names should consist of object name + structure "type";
  - e.g. ptrtab, symhash
  - structure and union members may have shorter names
    - e.g. stk (stack), tab (table/array)

type sizes
----------
byte	- 8-bit
word	- 16-bit
long    - 32-bit
quad	- 64-bit

abbreviations
-------------
adr     - address
arg	- argument
atr     - attribute(s)
bin     - binary
blk     - block
btn     - button
buf     - buffer
cap     - capability
ch      - character
chk     - check
chr     - character
cmp	- compare
cnt     - count
conf    - configuration
cons    - console
conv    - convert, conversion
ctrl    - control(ler)
dec     - decimal [number]
desc    - descriptor
dest    - destination
dbl	- double, floating point value (of type double)
dfl     - default
diff	- difference
doc     - document
drv     - drive(r)
eth     - ethernet
ev      - event
exec    - execute
fd	- floppy drive, file descriptor
flg	- flag
flt	- fault, floating point value (of type float)
fmt     - format
frm     - frame
func    - function
hd	- hard drive
hex     - hexadecimal
in	- input, e.g. inbuf
init    - initialise, initialisation
intr	- interrupt
io      - input/output
ipc	- inter-process communications
irq	- interrupt request
kbd     - keyboard
lang    - language
len     - length
lex	- lexical analysis/analyser
lim     - limit
lk      - lock
lpt	- line printer
mach    - machine
mag     - magazine (memory management)
man	- manual
max     - maximum
mem     - memory
mgr     - manager
min     - minimum
mod     - module, modulus
msk	- mask
mtx     - mutex (mutual exclusion lock)
ndx     - index
net     - network
nic     - network interface card
num     - number, ID
oct     - octal
ofs     - offset
op	- operation
out	- output, e.g. outbuf
par     - parallel
perm	- permissions
pg	- page
pix     - pixel
pkg     - package
pnt     - point
pos     - position
proc    - process
prog    - program
prot	- protection
ptr     - pointer
rect    - rectangle
ret	- return [value]
ser     - serial
sig     - signal
sim	- simulation, simulator
src     - source
stk     - stack
str     - string
sym	- symbol
sys     - system
tab     - table, array
thr     - thread
tmr	- timer
tok	- token
trap	- trap; interrupt, exception, trap, abort, fault, ...
val     - value
var     - variable
vis	- visualisation
win     - window
xfrm	- transform

