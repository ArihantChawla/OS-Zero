Welcome to read an early version of a style guide for the Zero project! :)

/* zero style abbreviations for words/terms and terminology */

indentation etc.
---------------
- see style.c for example code :)

general conventions
-------------------
- assembly files are to be written in AT&T syntax... ;)

objects/identifiers
-------------------
- volatile-qualifier should be used for cross-thread variables such as mutexes
- static-qualifier is good for locally visible values
  - may let the compiler do more aggressive optimisations
- global entities can be wrapped into a single per-program structure
  - e.g. struct g_malloc; use g_-prefix (global)
- constant [macro] values in all upper case, e.g. TRAPPF
- function names should contain verbs
  - module name + verb + possible object
    - e.g. meminit(), vminitzone()
- object sizes are usually represented as number of bytes
- n-prefix for number of items
  - e.g. nfile - number of files, nbyte - number of bytes
- data structure names should consist of object name + structure "type";
  - e.g. ptrtab, symhash
  - structure and union members may have shorter names
    - e.g. stk (stack), tab (table/array)

type sizes
----------
byte	- 8-bit
word	- 16-bit
long    - 32-bit
quad	- 64-bit

abbreviations
-------------
adr     - address
alu	- arithmetic-logical unit
apu	- application processor unit
arg	- argument
asm	- assembly, assemble(r)
atr     - attribute(s)
bin     - binary
blk     - block
bsp	- board support package
btn     - button
buf     - buffer
calc	- calculator
cap     - capability
ch      - character
chk     - check
chr     - character
cmp	- compare
cnt     - count
conf    - configuration
cons    - console
conv    - convert, conversion
cpu	- central processing unit
ctrl    - control(ler)
dec     - decimal [number]
desc    - descriptor
dest    - destination
dbl	- double, floating point value (of type double)
decr	- decrement
dfl     - default
diff	- difference
div	- division
dlg	- dialog
doc     - document
drv     - drive(r)
dsp	- digital signal processor
eta	- estimated time of arrival
eth     - ethernet
ev      - event
exec    - execute
fd	- floppy drive, file descriptor
flg	- flag
flt	- fault, floating point value (of type float)
fmt     - format
fp	- frame pointer
fpu	- floating point unit
frm     - frame
fs	- file system
func    - function
gpu	- graphics processing unit
gui	- graphical user interface
hd	- hard drive
hex     - hexadecimal
in	- input, e.g. inbuf
incr	- increment
init    - initialise, initialisation
intr	- interrupt
io      - input/output
ip	- internet protocol
ip4	- internet protocol version 4
ip6	- internet protocol version 6
ipc	- inter-process communications
irq	- interrupt request
kbd     - keyboard
kern	- kernel
lang    - language
len     - length
lex	- lexical analysis/analyser
lim     - limit
lin	- linear
lk      - lock
log	- logarithm
lpt	- line printer
mach    - machine
mag     - magazine (memory management)
man	- manual
max     - maximum
mem     - memory
mgr     - manager
min     - minimum
mmu	- memory management unit
mod     - module, modulus
msk	- mask
mtx     - mutex (mutual exclusion lock)
mul	- multiplication
ndx     - index
net     - network
nic     - network interface card
num     - number, ID
oct     - octal
ofs     - offset
op	- operation
out	- output, e.g. outbuf
par     - parallel
pc	- personal computer, program counter (i.e. instruction pointer)
perm	- permissions
pg	- page
pix     - pixel
pkg     - package
pnt     - point
pos     - position
proc    - process
prog    - program
prot	- protection
ptr     - pointer
rect    - rectangle
reg	- register
ret	- return [value]
rtn	- routine
sched	- schedule, scheduler
ser     - serial
sig     - signal
sim	- simulation, simulator
sp	- stack pointer
src     - source
stk     - stack
str     - string
sym	- symbol
sys     - system
tab     - table, array
tcp	- transfer control protocol
tcp4	- transfer control protocol version 4
tcp6	- transfer control protocol version 6
thr     - thread
tm	- time
tmr	- timer
tok	- token
trap	- trap; interrupt, exception, trap, abort, fault, ...
ts	- time specification (e.g. struct timespec)
tv	- time value (e.g. struct timeval)
tz	- time zone
ui	- user interface
usr	- user
val     - value
var     - variable
vec	- vector
vfs	- virtual file system
virt	- virtual
vis	- visualisation
win     - window
xfrm	- transform

